name: CAPSTONE- Full End-to-End CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  # --- 1. PROVISION INFRASTRUCTURE (IaC) ---
  provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.9

      - name: Terraform Init and Apply
        id: apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var="key_name=${{ secrets.SSH_KEY_NAME }}"
        
      - name: Get Server Public IP
        id: output
        run: |
          cd terraform
          SERVER_IP=$(terraform output -json server_public_ip | jq -r .)
          echo "SERVER_IP=$SERVER_IP" >> $GITHUB_OUTPUT

    outputs:
      server_ip: ${{ steps.output.outputs.SERVER_IP }}
      
  # --- 2. BUILD, TEST, & PUSH IMAGE (CI) ---
  build_and_push:
    runs-on: ubuntu-latest
    needs: provision
    steps:
      - name: Checkout Application Code
        uses: actions/checkout@v4
        with:
          path: application

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: application
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/capstone-flask-app:latest
          
  # --- 3. DEPLOY & CONFIGURE (CD) ---
  deploy:
    runs-on: ubuntu-latest
    needs: [provision, build_and_push] 
    steps:
      - name: Install Docker and Deploy Container via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.provision.outputs.server_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          
          # This script guarantees the configuration and deployment
          script: |
            echo "--- Starting Configuration and Deployment ---"
            
            # 1. GUARANTEED DOCKER INSTALLATION AND STARTUP
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            
            # Add user and activate permissions 
            sudo usermod -aG docker ubuntu
            
            # 2. LOG IN TO DOCKER HUB
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            # 3. PULL AND RUN CONTAINER
            IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/capstone-flask-app:latest
            
            /usr/bin/docker stop capstone-flask-app || true 
            /usr/bin/docker rm capstone-flask-app || true
            
            /usr/bin/docker run -d \
              --name capstone-flask-app \
              -p 80:5000 \
              $IMAGE_TAG
            
            echo "Deployment to EC2 complete. Application is live on port 80."